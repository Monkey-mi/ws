<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="usercenter.supplierFiles.data.SupplierFilesMapper">

<!-- 通过拥有者ID查询 主账号 供应商总数-->
<select id="getSupplierFilseForMainTotal" parameterType="map" resultType="Integer">
	SELECT
		count(*)
	FROM(
		SELECT
			tsf.supplier_id,
			count(*)
		FROM
			t_supplier_files tsf
			<if test="(minScore != null and minScore != '' ) or ( maxScore != null and maxScore != '')">
			inner join (	
				select * from(
					select
						tscr.supplier_id,
						tscr.check_score
					from
						t_supplier_checkfactory_report tscr
						order by tscr.create_dt DESC
				) as newtable
				GROUP BY supplier_id								
			) as cs on cs.supplier_id=tsf.supplier_id 
				<if test="minScore != null and minScore != ''">
					<![CDATA[and cs.check_score > #{minScore}]]>
				</if>
				<if test="maxScore != null and maxScore != ''">
					<![CDATA[and cs.check_score < #{maxScore}]]>
				</if>
			</if>
			inner join t_app_company_info as taci on taci.company_id = tsf.company_id
						<if test="complexKey != '' and complexKey != null">
						and(
							taci.corporation LIKE CONCAT('%','${complexKey}','%')
							OR
							taci.m_phone LIKE CONCAT('%','${complexKey}','%')
							OR
							taci.contact_addr LIKE CONCAT('%','${complexKey}','%')
							OR
							tsf.supplier_cpyname LIKE CONCAT('%','${complexKey}','%')
						)
						</if>
			left join t_supplier_owner_info as soi on soi.supplier_id = tsf.supplier_id
			left join t_supplier_regaccount_info tsri on tsri.supplier_id = tsf.supplier_id
		WHERE
			tsri.reg_id = #{accountId}
			and
			tsf.file_status = #{fileStatus}
			and 
			tsf.is_delete = 0
		GROUP BY tsf.supplier_id
	) as newTable	
</select>

<!-- 通过拥有者ID查询 主账号 供应商列表信息 -->
<select id="getSupplierFilseForMain" parameterType="map" resultType="map">
	SELECT
	*
	from(
	SELECT
			tsf.supplier_id,
			tsf.company_id,
			tsf.record_id,
			tsf.supplier_cpyname,
			tsf.file_status,
			tsf.create_dt,
			tsf.no_check,
			tsf.is_auth_updated,
			tsf.auth_dt,
			tsf.source_type,
			soi.company_id owner_id,
			taci.corporation,
			taci.m_phone,
			taci.contact_addr
		FROM
			t_supplier_files tsf
			<if test="(minScore != null and minScore != '' ) or ( maxScore != null and maxScore != '')">
			inner join (	
				select * from(
					select
						tscr.supplier_id,
						tscr.check_score
					from
						t_supplier_checkfactory_report tscr
						order by tscr.create_dt DESC
				) as newtable
				GROUP BY supplier_id								
			) as cs on cs.supplier_id=tsf.supplier_id 
				<if test="minScore != null and minScore != ''">
					<![CDATA[and cs.check_score > #{minScore}]]>
				</if>
				<if test="maxScore != null and maxScore != ''">
					<![CDATA[and cs.check_score < #{maxScore}]]>
				</if> 			
			</if>
			inner join t_app_company_info as taci on taci.company_id = tsf.company_id
						<if test="complexKey != '' and complexKey != null">
						and(
							taci.corporation LIKE CONCAT('%','${complexKey}','%')
							OR
							taci.m_phone LIKE CONCAT('%','${complexKey}','%')
							OR
							taci.contact_addr LIKE CONCAT('%','${complexKey}','%')
							OR
							tsf.supplier_cpyname LIKE CONCAT('%','${complexKey}','%')
						)
						</if>
			left join t_supplier_owner_info as soi on soi.supplier_id = tsf.supplier_id
			left join t_supplier_regaccount_info tsri on tsri.supplier_id = tsf.supplier_id
		WHERE
			tsri.reg_id = #{accountId}
			and
			tsf.file_status = #{fileStatus}
			and 
			tsf.is_delete = 0
		ORDER BY FIELD(owner_id,#{companyId}) DESC
	)	as newtable
		GROUP BY supplier_id
		ORDER BY FIELD(owner_id,#{companyId}) DESC
		limit #{start},#{limit}
</select>

<!-- 通过拥有者ID查询 子行号 供应商总数-->
<select id="getSupplierFilseForSubTotal" parameterType="map" resultType="Integer">
	SELECT
		count(*)
	FROM(
		SELECT
			tsf.supplier_id,
			count(*)
		FROM
			t_supplier_files tsf
			<if test="(minScore != null and minScore != '' ) or ( maxScore != null and maxScore != '')">
			inner join (	
				select * from(
					select
						tscr.supplier_id,
						tscr.check_score
					from
						t_supplier_checkfactory_report tscr
						order by tscr.create_dt DESC
				) as newtable
				GROUP BY supplier_id								
			) as cs on cs.supplier_id=tsf.supplier_id 
				<if test="minScore != null and minScore != ''">
					<![CDATA[and cs.check_score > #{minScore}]]>
				</if>
				<if test="maxScore != null and maxScore != ''">
					<![CDATA[and cs.check_score < #{maxScore}]]>
				</if> 			
			</if>
			inner join t_app_company_info as taci on taci.company_id = tsf.company_id
						<if test="complexKey != '' and complexKey != null">
						and(
							taci.corporation LIKE CONCAT('%','${complexKey}','%')
							OR
							taci.m_phone LIKE CONCAT('%','${complexKey}','%')
							OR
							taci.contact_addr LIKE CONCAT('%','${complexKey}','%')
							OR
							tsf.supplier_cpyname LIKE CONCAT('%','${complexKey}','%')
						)
						</if>
			left join t_supplier_owner_info as soi on soi.supplier_id = tsf.supplier_id
			left join t_subaccount_supplier_info tssi on tssi.supplier_id = tsf.supplier_id
		WHERE
			tssi.sa_id = #{accountId}
			and
			tsf.file_status = #{fileStatus}
			and 
			tsf.is_delete = 0
		GROUP BY tsf.supplier_id	
	) as newTable
</select>

<!-- 通过拥有者ID查询 子行号 供应商列表信息 -->
<select id="getSupplierFilseForSub" parameterType="map" resultType="map">
	SELECT
	*
	from(
	SELECT
			tsf.supplier_id,
			tsf.company_id,
			tsf.record_id,
			tsf.supplier_cpyname,
			tsf.file_status,
			tsf.create_dt,
			tsf.no_check,
			tsf.is_auth_updated,
			tsf.auth_dt,
			tsf.source_type,
			soi.company_id owner_id,
			taci.corporation,
			taci.m_phone,
			taci.contact_addr
		FROM
			t_supplier_files tsf
			<if test="(minScore != null and minScore != '' ) or ( maxScore != null and maxScore != '')">
			inner join (	
				select * from(
					select
						tscr.supplier_id,
						tscr.check_score
					from
						t_supplier_checkfactory_report tscr
						order by tscr.create_dt DESC
				) as newtable
				GROUP BY supplier_id								
			) as cs on cs.supplier_id=tsf.supplier_id 
				<if test="minScore != null and minScore != ''">
					<![CDATA[and cs.check_score > #{minScore}]]>
				</if>
				<if test="maxScore != null and maxScore != ''">
					<![CDATA[and cs.check_score < #{maxScore}]]>
				</if> 			
			</if>
			inner join t_app_company_info as taci on taci.company_id = tsf.company_id
						<if test="complexKey != '' and complexKey != null">
						and(
							taci.corporation LIKE CONCAT('%','${complexKey}','%')
							OR
							taci.m_phone LIKE CONCAT('%','${complexKey}','%')
							OR
							taci.contact_addr LIKE CONCAT('%','${complexKey}','%')
							OR
							tsf.supplier_cpyname LIKE CONCAT('%','${complexKey}','%')
						)
						</if>
			left join t_supplier_owner_info as soi on soi.supplier_id = tsf.supplier_id
			left join t_subaccount_supplier_info tssi on tssi.supplier_id = tsf.supplier_id
		WHERE
			tssi.sa_id = #{accountId}
			and
			tsf.file_status = #{fileStatus}
			and 
			tsf.is_delete = 0
		ORDER BY FIELD(owner_id,#{companyId}) DESC
	)	as newtable
		GROUP BY supplier_id
		ORDER BY FIELD(owner_id,#{companyId}) DESC
		limit #{start},#{limit}
</select>

<!-- 查询验厂周期基础信息表  -->
<select id="getCheckCycle" resultType="usercenter.saleManage.model.CheckFactoryCycle">
	select 
		t_check_factory_cycle.factory_cycle_id,
		t_check_factory_cycle.factory_cycle_name,
		t_check_factory_cycle.create_dt
	from
		t_check_factory_cycle
</select>

<!-- 通过ID改变供应商状态 -->
<update id="updateSupplierStatusById" parameterType="map">
	update
		t_supplier_files
	set
		file_status = #{fileStatus}
	where
		supplier_id = #{supplierId}
</update>

<!-- 逻辑删除供应商 -->
<update id="deleteSupplierById" parameterType="map">
	update
		t_supplier_files
	set
		is_delete = #{isDelete}
	where
		supplier_id = #{supplierId}
</update>

<insert id="addSupplierFiles" parameterType="map" keyProperty="supplier_id" useGeneratedKeys="true">
	insert into t_supplier_files
	(
		company_id,
		record_id,
		supplier_cpyname,
		source_type,
		file_status
	)
	values
	(
		#{company_id},
		#{record_id},
		#{supplier_cpyname},
		#{source_type},
		#{file_status}
	)
</insert>

<select id="checkSupplierExist" resultType="usercenter.supplierFiles.model.SupplierFiles" parameterType="map">
	select * from t_supplier_files where supplier_id IN (select supplier_id from t_supplier_owner_info where company_id=#{owner_id})
	and company_id=#{company_id} and file_status=0 limit 1
	<!-- file_status=0 现有供应商 file_status=1 备选供应商 -->
</select>

<select id="checkSupplierOfBrother" resultType="usercenter.supplierFiles.model.SupplierFiles" parameterType="map">
		select * 
		from t_supplier_files 
		where 1=1 
		and supplier_id IN 
		(select supplier_id from t_supplier_regaccount_info 
		where 1=1
		<if test="reg_id!=null and reg_id!=''">
			and reg_id=#{reg_id}
		</if>
		<if test="sa_id!=null and sa_id!=''">
			and reg_id=(select reg_id from t_app_sub_account where sa_id=#{sa_id} limit 1)
		</if>
		)
		and company_id=#{company_id} limit 1
</select>

<!-- 获取供应商采购分类 -->
<select id="getSupplierCategory" parameterType="map" resultType="map">
	SELECT
		taac.id,
		taac.category_id,
		taac.record_id,
		taac.create_dt,
		tpc.category_name,
		tpc.f_id,
		tpc.purchase_nature_id
	FROM
		t_access_application_category taac
	LEFT JOIN t_purchase_category  tpc on taac.category_id = tpc.category_id
	WHERE
		taac.record_id = #{recordId}
</select>

<!-- 获取免检供应商 -->
<select id="getExemptCheckSupplier" parameterType="map" resultType="usercenter.supplierFiles.model.SupplierFiles">
	select 
		tsf.supplier_id,
		tsf.company_id,
		tsf.record_id,
		tsf.supplier_cpyname,
		tsf.file_status,
		tsf.create_dt,
		tsf.no_check,
		tsf.no_checkor_id,
		tsf.no_checkor,
		tsf.no_check_dt,
		tsf.is_auth_updated,
		tsf.auth_dt,
		tsf.source_type,
		tsf.is_delete
	from 
		t_supplier_files tsf,
		t_supplier_regaccount_info tsri
	where
		tsf.supplier_id = tsri.supplier_id
		and
		tsf.no_check = 1
		and
		tsri.reg_id = #{regId}
	<if test="mulParams != null and mulParams != ''">
	AND(
		tsf.supplier_cpyname like CONCAT("%",#{mulParams},"%")
		or
		tsf.no_checkor like CONCAT("%",#{mulParams},"%")
	)
	</if>	
	order by tsf.no_check_dt desc
	limit #{start},#{limit}	
</select>

<!-- 获取免检供应商总数 -->
<select id="getExemptCheckSupplierTotal" parameterType="map" resultType="Integer">
	select 
		count(*)
	from 
		t_supplier_files tsf,
		t_supplier_regaccount_info tsri
	where
		tsf.supplier_id = tsri.supplier_id
		and
		tsf.no_check = 1
		and
		tsri.reg_id = #{regId}
</select>

<!-- 设置免检供应商 -->
<update id="siteNoCheckSupplierFile" parameterType="map">
	UPDATE
			t_supplier_files
	SET
		no_check = 1,
		no_checkor_id = #{noCheckorId},
		no_checkor = #{noCheckor},
		no_check_dt = NOW()
	WHERE
		supplier_id = #{supplierId}
</update>

<!-- 恢复验厂 -->
<update id="regainCheckFac" parameterType="map">
	UPDATE
		t_supplier_files
	SET
		no_check = 0
	WHERE
		supplier_id = #{supplierId}
</update>
</mapper>
