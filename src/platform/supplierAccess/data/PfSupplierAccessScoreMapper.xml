<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="platform.supplierAccess.data.PfSupplierAccessScoreMapper">


<select id="getPfSupplierAccessScoreList" parameterType="map" resultType="platform.supplierAccess.model.PfSupplierAccessScore">
	select
		t_app_supplier_access_score.score_id,
		t_app_supplier_access_score.company_id,
		t_app_supplier_access_score.item_id,
		t_app_supplier_access_score.item_fid,
		t_app_supplier_access_score.assess_score,
		t_app_supplier_access_score.assess_date,
		t_app_supplier_access_score.plan_assess_date,
		t_app_supplier_access_score.version_id,
		t_app_supplier_access_score.assess_view1,
		t_app_supplier_access_score.assess_view2,
		t_app_supplier_access_score.point_analyze,
		t_app_supplier_access_score.improve_act,
		t_app_supplier_access_score.responsible_person,
		t_app_supplier_access_score.assess_person,
		
		t_app_supplier_access_score.item_description
	from
		t_app_supplier_access_score
		where
		1=1
		<if test="company_id!=null and company_id>0">
		and t_app_supplier_access_score.company_id=#{company_id}
		</if>
		<if test="item_id!=null and item_id>0">
		and t_app_supplier_access_score.item_id=#{item_id}
		</if>
		<if test="item_fid!=null and item_fid>0">
		and t_app_supplier_access_score.item_fid=#{item_fid}
		</if>
</select>
<insert id="addPfSupplierAccessScore" parameterType="platform.supplierAccess.model.PfSupplierAccessScore" keyProperty="score_id" useGeneratedKeys="true">
	<selectKey keyProperty="score_id" resultType="int" order="BEFORE">
		select  ifnull(max(score_id)+1,1) from t_app_supplier_access_score 		
	</selectKey>
	insert into t_app_supplier_access_score
	(
		score_id,
		company_id,
		item_id,
		item_fid,
		assess_score,
		assess_date,
		plan_assess_date,
		version_id,
		assess_view1,
		assess_view2,
		point_analyze,
		improve_act,
		responsible_person,
		assess_person,
		
		item_description
	)
	values
	(
		#{score_id},
		#{company_id},
		#{item_id},
		#{item_fid},
		#{assess_score},
		#{assess_date},
		#{plan_assess_date},
		#{version_id},
		#{assess_view1},
		#{assess_view2},
		#{point_analyze},
		#{improve_act},
		#{responsible_person},
		#{assess_person},
		
		#{item_description}
	)
</insert>
<update id="updatePfSupplierAccessScore" parameterType="platform.supplierAccess.model.PfSupplierAccessScore">
	update t_app_supplier_access_score
		set
			score_id = #{score_id},
			company_id = #{company_id},
			item_id = #{item_id},
			item_fid = #{item_fid},
			assess_score = #{assess_score},
			assess_date = #{assess_date},
			plan_assess_date = #{plan_assess_date},
			version_id = #{version_id},
			assess_view1 = #{assess_view1},
			assess_view2 = #{assess_view2},
			point_analyze = #{point_analyze},
			improve_act = #{improve_act},
			responsible_person = #{responsible_person},
			assess_person = #{assess_person},
			
			item_description = #{item_description}
		where score_id = #{score_id}
</update>
<delete id="deletePfSupplierAccessScore" parameterType="platform.supplierAccess.model.PfSupplierAccessScore">
	delete from t_app_supplier_access_score
	where score_id = #{score_id}
</delete>
<delete id="deletePfSupplierAccessScoreForCompanyId" parameterType="map">
	delete from t_app_supplier_access_score
	where company_id = #{company_id}
</delete>
<select id="getPfSupplierAccessScoreDetailsList" parameterType="map" resultType="platform.supplierAccess.model.PfSupplierAccessScoreDetails">
	select t_score.score_id,
		t_score.company_id, 
		t_score.item_id, 
		t_score.item_fid, 
		t_score.assess_score, 
		t1.item_name,
		t2.item_name as fitem_name,
		t2.f_id as fitem_fid,
		t2.weightValue,
		t_score.assess_date, 
		t_score.plan_assess_date, 
		t_score.version_id, 
		t_score.point_analyze, 
		t_score.improve_act, 
		t_score.responsible_person, 
		t_score.assess_person, 
		t_score.item_description,
		t_score.assess_view1
	from t_app_supplier_access_score as t_score
		left join t_app_supplier_access_basetable as t1
			on t_score.item_id=t1.item_id
		left join t_app_supplier_access_basetable as t2
			on t1.f_id=t2.item_id
	 where 1=1
	 <if test="company_id!=null">
	 and t_score.company_id=#{company_id}
	 </if>
	  <if test="item_fid!=null">
	  and t_score.item_fid=#{item_fid}
	  </if>
	order by t_score.item_id
</select>

<!-- 获取13项认证的数据 -->
<select id="getPfSupplierAccessScoreSummaryList" parameterType="map" resultType="platform.supplierAccess.model.PfSupplierAccessScoreSummary">
	select 
		tt.company_id,
		tt.fitem_name,
		tt.fitem_id,
		tt.weightValue, 
		SUM(tt.assess_score)*tt.weightValue as realmum,
		COUNT(tt.fitem_name)*5*tt.weightValue as maxmum 
	from(
		select 
			t_score.company_id,
			t_score.assess_score,
			t1.item_name as fitem_name,
			t1.item_id as fitem_id,
			t1.weightValue
		from 
			t_app_supplier_access_score as t_score
			left join 
			t_app_supplier_access_basetable as t1
			on t_score.item_fid=t1.item_id
		) as tt
	where 1=1
	<if test="company_id!=null">
		and tt.company_id=#{company_id}
	</if>
	group by tt.fitem_name
	order by tt.fitem_id
</select>

</mapper>
